---
- name: Check if proxmox.fact file exists
  ansible.builtin.stat:
    path: "{{ default_facts_path }}/proxmox.fact"
  register: proxmox_fact_file

- name: Generate token identifier
  ansible.builtin.set_fact:
    token_id: "{{ proxmox_default_admin_token }}"

- name: Attempt to create authentication tokens
  ansible.builtin.command:
    argv:
      - pveum
      - user
      - token
      - add
      - "{{ item.name }}"
      - "{{ token_id }}"
      - -privsep
      - "0"
      - -comment
      - "{{ proxmox_default_admin_token_comment }}"
  with_items: "{{ proxmox_admin_accounts }}"
  register: generated_tokens
  failed_when: "'Token already exists' not in generated_tokens.stderr"
  ignore_errors: True
  when: proxmox_fact_file.stat.exists == False

- name: Extract Generated or Existing Proxmox Admin Token
  ansible.builtin.set_fact:
    generated_admin_token: "{{ item.stdout | pveum_generated_token }}"
  with_items: "{{ generated_tokens.results }}"
  when: generated_tokens is defined and generated_tokens.changed

- name: Save Proxmox Admin Token
  community.general.ini_file:
    create: True
    no_extra_spaces: True
    option: "token"
    section: "api"
    state: present
    value: "{{ generated_admin_token | vault(default_passphrase) | regex_replace('\n', '\n   ') }}"
    path: "{{ proxmox_token_file }}"
    owner: root
    group: root
    mode: '0644'
  when: generated_admin_token is defined

- name: Refresh Facts
  ansible.builtin.setup:
...
