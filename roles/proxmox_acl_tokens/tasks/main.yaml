---
- name: Acquire existing tokens
  ansible.builtin.command:
    argv:
      - pveum
      - user
      - token
      - list
      - "{{ item.name }}"
  with_items: "{{ proxmox_admin_accounts }}"
  register: user_token_list
  ignore_errors: True

- name: Store existing tokens
  ansible.builtin.set_fact:
    user_tokens: "{{ user_tokens | default({}) | combine({item.item.name: item.stdout.split()}) }}"
  with_items: "{{ user_token_list.results }}"

- name: Generate token identifier
  ansible.builtin.set_fact:
    token_id: "{{ proxmox_default_admin_token }}"
  run_once: true

- name: Check if proxmox.fact file exists
  ansible.builtin.stat:
    path: "{{ default_facts_path }}/proxmox.fact"
  register: proxmox_fact_file

- name: Create authentication tokens
  ansible.builtin.command:
    argv:
      - pveum
      - user
      - token
      - add
      - "{{ item.name }}"
      - "{{ token_id }}"
      - -privsep
      - "0"
      - -comment
      - "{{ proxmox_default_admin_token_comment }}"
  with_items: "{{ proxmox_admin_accounts }}"
  when: proxmox_fact_file.stat.exists == False or user_tokens[item.name] is not defined
  register: generated_tokens
  notify:
    - Extract Generated Proxmox Admin Token
    - Save Proxmox Admin Token
    - Refresh Facts
...
