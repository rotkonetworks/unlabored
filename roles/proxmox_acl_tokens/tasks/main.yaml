---
- name: Check if proxmox.fact file exists
  ansible.builtin.stat:
    path: "{{ default_facts_path }}/proxmox.fact"
  register: proxmox_fact_file

- name: Generate token identifier for each host
  ansible.builtin.set_fact:
    proxmox_admin_token: "{{ proxmox_default_admin_token }}-{{ inventory_hostname }}"

- name: Acquire existing tokens
  ansible.builtin.command:
    argv:
      - pveum
      - user
      - token
      - list
      - "{{ item.name }}"
  with_items: "{{ proxmox_admin_accounts }}"
  register: user_token_list

- name: Store existing tokens
  ansible.builtin.set_fact:
    user_tokens: "{{ user_tokens | default({}) | combine({item.cmd[-1]: item.stdout | pveum_user_tokens}) }}"
  with_items: "{{ user_token_list.results }}"

- name: Create authentication tokens
  ansible.builtin.command:
    argv:
      - pveum
      - user
      - token
      - add
      - "{{ item.name }}"
      - "{{ proxmox_admin_token }}"
      - -privsep
      - "0"
      - -comment
      - "{{ proxmox_default_admin_token_comment }}"
  with_items: "{{ proxmox_admin_accounts }}"
  when:
    - proxmox_admin_token not in user_token_list.results | map(attribute='stdout') | list
  register: generated_tokens
  notify:
    - Extract Generated Proxmox Admin Token
    - Save Proxmox Admin Token
    - Refresh Facts
...
