# Standards: 0.2
---
# - name: Create predefined containers
#   community.general.proxmox:
#     api_user: "{{ api_user }}"
#     api_password: "{{ api_password }}"
#     api_host: "{{ proxmox_defaults.api_host }}"
#     vmid: "{{ item.proxmox_config.vmid }}"
#     hostname: "{{ item.proxmox_config.hostname }}"
#     template: "{{ item.proxmox_config.ostemplate }}"
#     netif: "{{ item.proxmox_config.netif }}"
#     cores: "{{ item.proxmox_config.cores }}"
#     memory: "{{ item.proxmox_config.memory }}"
#     swap: "{{ item.proxmox_config.swap }}"
#     password: "{{ item.proxmox_config.password }}"
#     disk: "{{ item.proxmox_config.disk }}"
#     mounts: "{{ item.proxmox_config.mounts }}"
#     onboot: "{{ item.proxmox_config.onboot }}"
#     unprivileged: "{{ item.proxmox_config.unprivileged }}"
#     validate_certs: "{{ item.proxmox_config.validate_certs }}"
#     description: "{{ item.proxmox_config.description }}"
#     state: "{{ item.proxmox_config.state }}"
#     features: "{{ item.proxmox_config.features }}"
#   loop: "{{ lxc_nodes }}"
#   when: lxc_nodes is defined
#   register: container_creation_result
#
# - name: Start predefined nodes
#   community.general.proxmox:
#     api_user: "{{ api_user }}"
#     api_password: "{{ api_password }}"
#     api_host: "{{ proxmox_defaults.api_host }}"
#     vmid: "{{ item.proxmox_config.vmid }}"
#     state: 'started'
#   loop: "{{ lxc_nodes }}"
#   when:
#     - lxc_nodes is defined
#     - "'state' in item.proxmox_config"
#     - "item.proxmox_config['state'] == 'present'"
#   register: container_start_result

- name: Create predefined containers
  community.general.proxmox:
    proxmox: "{{ proxmox_defaults | combine(item.proxmox_config) }}"
  loop: "{{ lxc_nodes }}"
  when: lxc_nodes is defined
  register: container_creation_result

- name: Start predefined nodes
  community.general.proxmox:
    proxmox: "{{ proxmox_defaults | combine({'vmid': item.proxmox_config['vmid'], 'state': 'started'}) }}"
  loop: "{{ lxc_nodes }}"
  when:
    - lxc_nodes is defined
    - item.proxmox_config['state'] == 'present'
  register: container_start_result
