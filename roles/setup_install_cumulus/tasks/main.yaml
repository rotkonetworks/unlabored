---
- name: Ensure group {{ default_user }} exists
  ansible.builtin.group:
    name: "{{ default_user }}"
    state: present
    system: True

- name: Ensure user {{ default_user }} exists without unnecessary privileges
  ansible.builtin.user:
    append: True
    comment: cumulus service user
    create_home: False
    group: "{{ default_user }}"
    groups: []
    home: "{{ default_base_path }}"
    name: "{{ default_user }}"
    shell: "/sbin/nologin"
    state: present
    system: True

- name: Ensure user {{ default_user }} owns directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0750"
    state: directory
  loop:
    - "{{ default_base_path }}"
    - "{{ default_database_path }}"

- name: Gather facts
  ansible.builtin.setup:

- name: Check if needs custom chain spec
  ansible.builtin.set_fact:
    needs_custom_chain_spec: "{{ default_network in ['asset-hub-paseo', 'bridge-hub-paseo'] }}"

- name: Check if the local chain spec file exists
  ansible.builtin.stat:
    path: "{{ default_chain_spec }}"
  register: local_chain_spec
  when: needs_custom_chain_spec
  delegate_to: "{{ inventory_hostname }}"

- name: Download chain spec if not present
  ansible.builtin.get_url:
    url: "{{ default_chain_spec_dl_url }}"
    dest: "{{ default_chain_spec }}"
    mode: "0644"
    timeout: 60
  when:
    - needs_custom_chain_spec
    - not local_chain_spec.stat.exists
  delegate_to: "{{ inventory_hostname }}"

- name: Copy Cumulus systemd service for specific node type
  ansible.builtin.template:
    src: "{{ default_node_type + '.service.j2' }}"
    dest: "{{ default_base_path }}/cumulus.service"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0640"
  when: default_node_type in ["collator", "bootnode", "endpoint"]
  notify:
    - Symlink Cumulus service to systemd
    - Stop Cumulus
    - Systemd daemon-reload
    - Start Cumulus
    - Add type of service fact

- name: Flush handlers after service copy
  ansible.builtin.meta: flush_handlers

- name: Install Cumulus - {{ default_client_version }}
  ansible.builtin.get_url:
    url: "{{ default_download_url }}"
    dest: "{{ default_base_path }}/{{ default_client_version }}"
    mode: "u+r+x"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
  register: download_result
  notify:
    - Add Service Pinned Status
    - Add Cumulus service version
    - Symlink Cumulus service to systemd
    - Symlink Cumulus release
    - Symlink binary executable
    - Stop Cumulus
    - Systemd daemon-reload
    - Start Cumulus
  when:
    - ansible_local['noderole']['node']['pinned'] != "True"
    - ansible_local['noderole']['node']['version'] != default_client_version

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Ensure Cumulus service is running
  ansible.builtin.systemd:
    name: cumulus
    state: started
