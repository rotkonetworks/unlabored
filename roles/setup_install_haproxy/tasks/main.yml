---
- name: Add HAProxy GPG key
  ansible.builtin.apt_key:
    url: https://haproxy.debian.net/bernat.debian.org.gpg
    state: present

- name: Add HAProxy repository
  ansible.builtin.apt_repository:
    repo: deb https://haproxy.debian.net bookworm-backports-2.8 main
    state: present
    filename: haproxy

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Ensure HAProxy 2.8.* is installed
  ansible.builtin.apt:
    name: "haproxy=2.8.*"
    state: present
    force: yes
    force_apt_get: yes
    dpkg_options: "force-confdef,force-confold"
  environment:
    DEBIAN_FRONTEND: noninteractive
  when:
    - ansible_os_family == 'Debian'

- name: Get HAProxy version
  ansible.builtin.command: haproxy -v
  register: haproxy_version_result
  changed_when: false
  check_mode: false

- name: Set HAProxy version
  ansible.builtin.set_fact:
    haproxy_version: '{{ haproxy_version_result.stdout_lines[0] | regex_replace("^HA-?Proxy version (\d+(\.\d+)*).*$", "\1") }}'

- name: Ensure HAProxy version is 2.8.x
  ansible.builtin.assert:
    that:
      - haproxy_version is version('2.8', '>=')
      - haproxy_version is version('2.9', '<')
    fail_msg: "Installed HAProxy version ({{ haproxy_version }}) is not in the 2.8.x series"
    success_msg: "HAProxy version {{ haproxy_version }} is correctly installed"

- name: Display HAProxy template content
  ansible.builtin.debug:
    msg: "{{ lookup('template', haproxy_template) }}"

# - name: Copy HAProxy configuration in place.
#   ansible.builtin.template:
#     src: "{{ haproxy_template }}"
#     dest: /etc/haproxy/haproxy.cfg
#     mode: 0644
#   register: haproxy_config

- name: Validate HAProxy configuration
  ansible.builtin.command: haproxy -c -f /etc/haproxy/haproxy.cfg
  register: haproxy_validate
  changed_when: false
  failed_when: haproxy_validate.rc != 0

- name: Display HAProxy validation result
  ansible.builtin.debug:
    var: haproxy_validate

- name: Restart HAProxy if configuration is valid
  ansible.builtin.service:
    name: haproxy
    state: restarted
  when: haproxy_validate.rc == 0

- name: Ensure HAProxy is started and enabled on boot.
  service: name=haproxy state=started enabled=yes
