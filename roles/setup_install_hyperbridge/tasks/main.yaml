---
- name: Ensure group {{ default_user }} exists
  ansible.builtin.group:
    name: "{{ default_user }}"
    state: present
    system: True

- name: Ensure user {{ default_user }} exists without unnecessary privileges
  ansible.builtin.user:
    append: True
    comment: hyperbridge service user
    create_home: False
    group: "{{ default_user }}"
    groups: []
    home: "{{ default_base_path }}"
    name: "{{ default_user }}"
    shell: "/sbin/nologin"
    state: present
    system: True

- name: Ensure user {{ default_user }} owns directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0750"
    state: directory
  loop:
    - "{{ default_base_path }}"
    - "{{ default_database_path }}"

- name: Gather facts
  ansible.builtin.setup:

- name: Copy Hyperbridge systemd service for specific node type
  ansible.builtin.template:
    src: "{{ default_node_type + '.service.j2' }}"
    dest: "{{ default_base_path }}/hyperbridge.service"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0640"
  when: default_node_type in ["node", "validator", "full-node"]
  notify:
    - Symlink Hyperbridge service to systemd
    - Stop Hyperbridge
    - Systemd daemon-reload
    - Start Hyperbridge
    - Add type of service fact

- name: Flush handlers after Hyperbridge service copy
  ansible.builtin.meta: flush_handlers

- name: Download Hyperbridge v{{ default_client_version }}
  ansible.builtin.get_url:
    url: "{{ default_download_url }}"
    dest: "{{ default_base_path }}/hyperbridge-v{{ default_client_version }}.tar.gz"
    mode: "0640"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
  register: download_result
  when:
    - ansible_local['noderole']['node']['pinned'] != "True"
    - ansible_local['noderole']['node']['version'] != default_client_version

- name: Extract Hyperbridge archive
  ansible.builtin.unarchive:
    src: "{{ default_base_path }}/hyperbridge-v{{ default_client_version }}.tar.gz"
    dest: "{{ default_base_path }}/hyperbridge-v{{ default_client_version }}"
    remote_src: true
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0750"
  when: download_result.changed
  register: extract_result
  notify:
    - Add Service Pinned Status
    - Add Hyperbridge service version
    - Symlink Hyperbridge service to systemd
    - Symlink Hyperbridge release
    - Symlink binary executable
    - Stop Hyperbridge
    - Systemd daemon-reload
    - Start Hyperbridge

- name: Clean up downloaded archive
  ansible.builtin.file:
    path: "{{ default_base_path }}/hyperbridge-v{{ default_client_version }}.tar.gz"
    state: absent
  when: extract_result.changed

- name: Flush handlers after Hyperbridge install
  ansible.builtin.meta: flush_handlers

- name: Verify Hyperbridge version
  ansible.builtin.command: "{{ default_base_path }}/hyperbridge --version"
  register: default_client_version_result
  changed_when: False
  failed_when: "default_client_version not in default_client_version_result.stdout"

- name: Ensure Hyperbridge service is running
  ansible.builtin.systemd:
    name: hyperbridge
    state: started
