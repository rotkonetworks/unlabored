---
- name: Ensure group {{ default_user }} exists
  ansible.builtin.group:
    name: "{{ default_user }}"
    state: present
    system: True

- name: Ensure user {{ default_user }} exists without unnecessary privileges
  ansible.builtin.user:
    append: True
    comment: invarch service user
    create_home: False
    group: "{{ default_user }}"
    groups: []
    home: "{{ default_base_path }}"
    name: "{{ default_user }}"
    shell: "/sbin/nologin"
    state: present
    system: True

- name: Ensure user {{ default_user }} owns directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0750"
    state: directory
  loop:
    - "{{ default_base_path }}"
    - "{{ default_database_path }}"

- name: Gather facts
  ansible.builtin.setup:

  #NOTE: kilt need glibc-2.39
- name: Check if glibc 2.39 is already installed
  ansible.builtin.stat:
    path: /opt/glibc-2.39/lib/ld-linux-x86-64.so.2
  register: glibc_installed

- name: Ensure required packages for glibc build are present
  ansible.builtin.apt:
    name:
      - build-essential
      - manpages-dev
      - gawk
      - bison
      - python3
      - wget
    state: present
    update_cache: True
  when: not glibc_installed.stat.exists

- name: Create directories for glibc source and install
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /usr/src/glibc-2.39
    - /opt/glibc-2.39
  when: not glibc_installed.stat.exists

- name: Download glibc 2.39 source
  ansible.builtin.get_url:
    url: http://ftp.gnu.org/gnu/libc/glibc-2.39.tar.gz
    dest: /usr/src/glibc-2.39.tar.gz
    mode: "0644"
  when: not glibc_installed.stat.exists

- name: Extract glibc 2.39 source
  ansible.builtin.unarchive:
    src: /usr/src/glibc-2.39.tar.gz
    dest: /usr/src/
    remote_src: yes
  when: not glibc_installed.stat.exists

- name: Create glibc build directory
  ansible.builtin.file:
    path: /usr/src/glibc-2.39/build
    state: directory
    mode: "0755"
  when: not glibc_installed.stat.exists

- name: Configure glibc 2.39 build
  ansible.builtin.command:
    cmd: ../configure --prefix=/opt/glibc-2.39
    chdir: /usr/src/glibc-2.39/build
  args:
    creates: /usr/src/glibc-2.39/build/Makefile
  when: not glibc_installed.stat.exists

- name: Build glibc 2.39
  ansible.builtin.command:
    cmd: make -j{{ ansible_facts.processor_vcpus | default(2) }}
    chdir: /usr/src/glibc-2.39/build
  when: not glibc_installed.stat.exists

- name: Install glibc 2.39
  ansible.builtin.command:
    cmd: make install
    chdir: /usr/src/glibc-2.39/build
  args:
    creates: /opt/glibc-2.39/lib/libc.so.6
  when: not glibc_installed.stat.exists

- name: Copy Invarch systemd service for specific node type
  ansible.builtin.template:
    src: "{{ default_node_type + '.service.j2' }}"
    dest: "{{ default_base_path }}/invarch.service"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0640"
  when: default_node_type in ["collator", "bootnode", "endpoint"]
  notify:
    - Symlink Invarch service to systemd
    - Stop Invarch
    - Systemd daemon-reload
    - Start Invarch
    - Add type of service fact

- name: Flush handlers after Invarch service copy
  ansible.builtin.meta: flush_handlers

- name: Install Invarch {{ default_client_version }}
  ansible.builtin.get_url:
    url: "{{ default_download_url }}"
    dest: "{{ default_base_path }}/invarch-{{ default_client_version }}"
    mode: "u+r+x"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
  register: download_result
  notify:
    - Add Service Pinned Status
    - Add Invarch service version
    - Symlink Invarch service to systemd
    - Symlink Invarch release
    - Symlink binary executable
    - Stop Invarch
    - Systemd daemon-reload
    - Start Invarch
  when:
    - ansible_local['noderole']['node']['pinned'] != "True"
    - ansible_local['noderole']['node']['version'] != default_client_version

- name: Flush handlers after Invarch install
  ansible.builtin.meta: flush_handlers

- name: Ensure Invarch service is running
  ansible.builtin.systemd:
    name: invarch
    state: started
