---
# Install SSH key from value
- name: Install SSH key
  ansible.builtin.copy:
    content: "{{ default_dotters_private_key }}"
    dest: '/root/.ssh/dotters_key'
    mode: '0600'

# Add SSH key to agent without password
- name: Add SSH key to agent without password
  ansible.builtin.shell: |
    set -o pipefail
    eval $(ssh-agent -s)
    ssh-add /root/.ssh/dotters_key
  environment:
    SSH_AUTH_SOCK: /tmp/ssh-agent.sock
  when: default_dotters_private_key_pw is not defined

# Add SSH key to agent with password
- name: Add SSH key to agent with password
  ansible.builtin.shell: |
    set -o pipefail
    eval $(ssh-agent -s)
    echo "{{ default_dotters_private_key_pw }}" | sshpass ssh-add /root/.ssh/dotters_key
  environment:
    SSH_AUTH_SOCK: /tmp/ssh-agent.sock
  no_log: true
  when: default_dotters_private_key_pw is defined

- name: Install/Update dotters.network SSL
  become: true
  block:
    - name: Git update
      ansible.builtin.git:
        repo: 'git@github.com:GATOTECH-LTD/dotters-ssl.git'
        dest: '/opt/github/dotters-ssl'
        key_file: '/root/.ssh/dotters_key'
        update: yes
        force: yes
      tags:
      - skip_ansible_lint

    - name: Check new expiration date
      ansible.builtin.shell: |
        set -o pipefail
        openssl x509 -enddate -noout -in /opt/github/dotters-ssl/cert/cert.pem | cut -f2 -d'='
      register: expiration_date_new_dotters

# Ensure destination directories exist
- name: Ensure directories exist for archive and live certificates
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "/etc/letsencrypt/archive/dotters.network"
    - "/etc/letsencrypt/live/dotters.network"

# Copy the certificates to the archive folder
- name: Copy SSL certificates to archive directory
  ansible.builtin.copy:
    src: "/opt/github/dotters-ssl/cert/{{ item }}"
    dest: "/etc/letsencrypt/archive/dotters.network/{{ item }}"
    mode: '0644'
  loop:
    - cert.pem
    - chain.pem
    - fullchain.pem
    - privkey.pem

# Create symlinks in the live directory
- name: Create symlinks in live directory
  ansible.builtin.file:
    src: "/etc/letsencrypt/archive/dotters.network/{{ item }}"
    dest: "/etc/letsencrypt/live/dotters.network/{{ item }}"
    state: link
  loop:
    - cert.pem
    - chain.pem
    - fullchain.pem
    - privkey.pem

# Setup NGINX configuration directories
- name: Ensure NGINX configuration directories exist
  ansible.builtin.file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - sites-available
    - sites-enabled

# Configure NGINX for HTTPS
- name: Apply HTTPS configuration to NGINX
  ansible.builtin.template:
    src: https-{{ default_node_type }}-dotters.j2
    dest: "/etc/nginx/sites-available/{{ default_public_dns_dotters }}"
    mode: '0755'

# Enable the HTTPS configuration in NGINX
- name: Enable HTTPS configuration for NGINX
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ default_public_dns_dotters }}"
    dest: "/etc/nginx/sites-enabled/{{ default_public_dns_dotters }}"
    state: link
  notify: Reload nginx
...
