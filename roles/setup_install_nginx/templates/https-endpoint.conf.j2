# Server 1: Regular Endpoint Server
server {
    listen {{ default_p2p_port_wss }} ssl http2;
    listen [::]:{{ default_p2p_port_wss }} ssl http2;
    server_name {{ default_domain }};
    
    # SSL/TLS settings
    ssl_certificate {{ letsencrypt_cert_path }};
    ssl_certificate_key {{ letsencrypt_key_path }};
    
    # Strong SSL settings
    ssl_protocols TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    # ssl_stapling on;
    # ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    location / {
        proxy_buffers 16 4k;
        proxy_buffer_size 2k;
        proxy_pass http://127.0.0.1:{{ default_p2p_port_ws }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Server 2: Secure RPC Server
server {
    listen {{ default_secure_rpc_port }} ssl http2;
    listen [::]:{{ default_secure_rpc_port }} ssl http2;
    server_name {{ default_domain }};
    
    # SSL/TLS settings
    ssl_certificate {{ letsencrypt_cert_path }};
    ssl_certificate_key {{ letsencrypt_key_path }};
    
    # SSL settings are inherited from the previous server block

    location / {
        proxy_buffers 16 4k;
        proxy_buffer_size 2k;
        proxy_pass http://127.0.0.1:{{ default_rpc_port }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

{% if default_bootnode_domain is defined %}
# Server 3: Bootnode Server
server {
    listen {{ default_bootnode_p2p_port_wss }} ssl http2;
    listen [::]:{{ default_bootnode_p2p_port_wss }} ssl http2;
    server_name {{ default_bootnode_domain }};
    
    # SSL/TLS settings
    ssl_certificate {{ letsencrypt_cert_path }};
    ssl_certificate_key {{ letsencrypt_key_path }};

    # SSL settings are inherited from the first server block
    location / {
        proxy_buffers 16 4k;
        proxy_buffer_size 2k;
        proxy_pass http://127.0.0.1:{{ default_bootnode_p2p_port_ws }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
{% endif %}

{% if transition_bootnode_domain is defined %}
# Server 4: Transition Bootnode Server
server {
    listen {{ transition_bootnode_p2p_port_wss }} ssl http2;
    listen [::]:{{ transition_bootnode_p2p_port_wss }} ssl http2;
    server_name {{ transition_bootnode_domain }};
    
    # SSL/TLS settings
    ssl_certificate {{ letsencrypt_cert_path }};
    ssl_certificate_key {{ letsencrypt_key_path }};

    # SSL settings are inherited from the first server block
    location / {
        proxy_buffers 16 4k;
        proxy_buffer_size 2k;
        proxy_pass http://127.0.0.1:{{ transition_bootnode_p2p_port_ws }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
{% endif %}
