---
- name: Gather facts
  ansible.builtin.setup:

- name: Ensure group {{ default_user }} exists
  ansible.builtin.group:
    name: "{{ default_user }}"
    state: present
    system: True

- name: Ensure user {{ default_user }} exists without unnecessary privileges
  ansible.builtin.user:
    append: True
    comment: polkadot service user
    create_home: False
    group: "{{ default_user }}"
    groups: []
    home: "{{ default_base_path }}"
    name: "{{ default_user }}"
    shell: "/sbin/nologin"
    state: present
    system: True

- name: Ensure user {{ default_user }} owns directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0750"
    state: directory
  loop:
    - "{{ default_base_path }}"
    - "{{ default_database_path }}"
    - "{{ default_base_path }}/bin"

- name: Ensure /usr/libexec directory exists
  ansible.builtin.file:
    path: "/usr/libexec"
    state: directory
    mode: "0755"

- name: Copy Polkadot systemd service for specific node type
  ansible.builtin.template:
    src: "{{ default_node_type + '.service.j2' }}"
    dest: "{{ default_base_path }}/polkadot.service"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0640"
  when: default_node_type in ["validator", "bootnode", "endpoint"]
  notify:
    - Symlink Polkadot service to systemd
    - Stop Polkadot
    - Systemd daemon-reload
    - Start Polkadot
    - Add type of service fact

- name: Check if Polkadot is already installed
  ansible.builtin.stat:
    path: "{{ default_base_path }}/polkadot"
  register: polkadot_binary

- name: Set force_update flag
  ansible.builtin.set_fact:
    force_update: "{{ force_update | default(false) }}"

- name: Check if needs custom chain spec
  ansible.builtin.set_fact:
    needs_custom_chain_spec: "{{ default_network in ['paseo'] }}"

- name: Check if the local chain spec file exists
  ansible.builtin.stat:
    path: "{{ default_chain_spec }}"
  register: local_chain_spec
  when: needs_custom_chain_spec
  delegate_to: "{{ inventory_hostname }}"

- name: Download chain spec if not present
  ansible.builtin.get_url:
    url: "{{ default_chain_spec_dl_url }}"
    dest: "{{ default_chain_spec }}"
    mode: "0644"
    timeout: 60
  when:
    - needs_custom_chain_spec
    - not local_chain_spec.stat.exists
  delegate_to: "{{ inventory_hostname }}"

- name: Install worker binaries v{{ default_client_version }}
  when:
    - default_node_type == "validator"
    - not polkadot_binary.stat.exists or force_update or ansible_local['noderole']['node']['version'] is not defined or ansible_local['noderole']['node']['version'] != default_client_version
  block:
    - name: Install prepare worker binary v{{ default_client_version }}
      ansible.builtin.get_url:
        url: "{{ default_download_url_prepare }}"
        dest: "{{ default_base_path }}/bin/polkadot-prepare-worker-{{ default_client_version }}"
        mode: "u+r+x"
        owner: "{{ default_user }}"
        group: "{{ default_user }}"
      register: download_result_prepare_worker

    - name: Install execute worker binary v{{ default_client_version }}
      ansible.builtin.get_url:
        url: "{{ default_download_url_execute }}"
        dest: "{{ default_base_path }}/bin/polkadot-execute-worker-{{ default_client_version }}"
        mode: "u+r+x"
        owner: "{{ default_user }}"
        group: "{{ default_user }}"
      register: download_result_execute_worker

    - name: Create soft links for worker binaries
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
        owner: "{{ default_user }}"
        group: "{{ default_user }}"
      loop:
        - src: "{{ default_base_path }}/bin/polkadot-prepare-worker-{{ default_client_version }}"
          dest: "/usr/libexec/polkadot-prepare-worker"
        - src: "{{ default_base_path }}/bin/polkadot-execute-worker-{{ default_client_version }}"
          dest: "/usr/libexec/polkadot-execute-worker"
      notify:
        - Stop Polkadot
        - Start Polkadot

- name: Install Polkadot v{{ default_client_version }}
  ansible.builtin.get_url:
    url: "{{ default_download_url }}"
    dest: "{{ default_base_path }}/bin/{{ default_client_version }}"
    mode: "u+r+x"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
  register: download_result
  when: not polkadot_binary.stat.exists or force_update or ansible_local['noderole']['node']['version'] is not defined or ansible_local['noderole']['node']['version'] != default_client_version

- name: Create soft link for Polkadot binary
  ansible.builtin.file:
    src: "{{ default_base_path }}/bin/{{ default_client_version }}"
    dest: "{{ default_base_path }}/polkadot"
    state: link
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
  when: not polkadot_binary.stat.exists or force_update or ansible_local['noderole']['node']['version'] is not defined or ansible_local['noderole']['node']['version'] != default_client_version
  notify:
    - Add Service Pinned Status
    - Add Polkadot service version
    - Symlink Polkadot service to systemd
    - Stop Polkadot
    - Systemd daemon-reload
    - Start Polkadot

    #NOTE: compare sha256
- name: Download official SHA256 checksum file
  ansible.builtin.get_url:
    url: "{{ default_download_polkadotSHA256 }}"
    dest: "{{ default_base_path }}/bin/{{ default_client_version }}.sha256"
    mode: "0640"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
  when: not polkadot_binary.stat.exists or force_update or ansible_local['noderole']['node']['version'] is not defined or ansible_local['noderole']['node']['version'] != default_client_version

- name: Calculate SHA256 checksum of downloaded Polkadot binary
  ansible.builtin.command:
    cmd: "sha256sum {{ default_base_path }}/bin/{{ default_client_version }}"
  register: calculated_checksum
  changed_when: False
  when: not polkadot_binary.stat.exists or force_update or ansible_local['noderole']['node']['version'] is not defined or ansible_local['noderole']['node']['version'] != default_client_version

- name: Read official SHA256 checksum
  ansible.builtin.command:
    cmd: "cat {{ default_base_path }}/bin/{{ default_client_version }}.sha256"
  register: official_checksum
  changed_when: False
  when: not polkadot_binary.stat.exists or force_update or ansible_local['noderole']['node']['version'] is not defined or ansible_local['noderole']['node']['version'] != default_client_version

- name: Verify SHA256 checksum
  ansible.builtin.fail:
    msg: "SHA256 checksum mismatch. Expected: {{ official_checksum.stdout.split()[0] }}, Got: {{ calculated_checksum.stdout.split()[0] }}"
  when:
    - not polkadot_binary.stat.exists or force_update or ansible_local['noderole']['node']['version'] is not defined or ansible_local['noderole']['node']['version'] != default_client_version
    - calculated_checksum.stdout.split()[0] != official_checksum.stdout.split()[0]

    #NOTE: please take a look at it -al
- name: Perform validator-specific tasks
  when: default_node_type == "validator"
  block:
    - name: Create ParityDB folder if default_database is paritydb
      ansible.builtin.file:
        path: "{{ default_base_path }}/chains/{{ default_chains_name }}/paritydb/full"
        state: directory
        owner: "{{ default_user }}"
        group: "{{ default_user }}"
        mode: "0750"
      when: default_database == "paritydb"

    - name: Ensure network directory exists
      ansible.builtin.file:
        path: "{{ default_base_path }}/chains/{{ default_chains_name }}/network"
        state: directory
        owner: "{{ default_user }}"
        group: "{{ default_user }}"
        mode: "0750"

    - name: Check if secret_ed25519 file exists
      ansible.builtin.stat:
        path: "{{ default_base_path }}/chains/{{ default_chains_name }}/network/secret_ed25519"
      register: secret_ed25519_file

    - name: Generate node key
      ansible.builtin.command:
        cmd: "./polkadot key generate-node-key --file {{ default_base_path }}/chains/{{ default_chains_name }}/network/secret_ed25519"
        chdir: "{{ default_base_path }}"
      become: True
      become_user: "{{ default_user }}"
      when: not secret_ed25519_file.stat.exists

- name: Flush handlers after service copy
  ansible.builtin.meta: flush_handlers

- name: Ensure Polkadot service is running
  ansible.builtin.systemd:
    name: polkadot
    state: started
    enabled: True
