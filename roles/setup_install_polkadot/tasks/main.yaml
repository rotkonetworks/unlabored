---
- name: Ensure group {{ default_user }} exists
  ansible.builtin.group:
    name: "{{ default_user }}"
    state: present
    system: True

- name: Ensure user {{ default_user }} exists without unnecessary privileges
  ansible.builtin.user:
    append: True
    comment: polkadot service user
    create_home: False
    group: "{{ default_user }}"
    groups: []
    home: "{{ default_base_path }}"
    name: "{{ default_user }}"
    shell: "/sbin/nologin"
    state: present
    system: True

- name: Ensure user {{ default_user }} owns directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: '0750'
    state: directory
  loop:
    - "{{ default_base_path }}"
    - "{{ default_database_path }}"

- name: Gather facts
  ansible.builtin.setup:

- name: Check if default network is Paseo
  ansible.builtin.set_fact:
    is_paseo_network: "{{ default_network == 'paseo' }}"

- name: Download Paseo chain spec
  ansible.builtin.get_url:
    url: "{{ default_chain_spec_dl_url }}"
    dest: "{{ default_chain_spec }}"
    mode: '0644'
  when: is_paseo_network

- name: Copy Polkadot systemd service for specific node type
  ansible.builtin.template:
    src: "{{ 'polkadot_' + default_node_type + '.service.j2' }}"
    dest: "{{ default_base_path }}/polkadot.service"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: '0640'
  when: default_node_type in ["validator", "bootnode", "endpoint"]
  notify:
    - Symlink Polkadot service to systemd
    - Stop Polkadot
    - Systemd daemon-reload
    - Start Polkadot
    - Add type of service fact

- name: Install worker binaries v{{ default_client_version }}
  when:
    - ansible_local['noderole']['node']['pinned'] != "True"
    - ansible_local['noderole']['node']['version'] != default_client_version
    - ansible_local['noderole']['node']['type'] == "validator"
  block:
    - name: Install prepare worker binary v{{ default_client_version }}
      ansible.builtin.get_url:
        url: "{{ default_download_url_prepare }}"
        dest: "{{ default_auxiliary_binary_path }}/polkadot-prepare-worker"
        mode: "u+r+x"
        owner: "{{ default_user }}"
        group: "{{ default_user }}"
      register: download_result_prepare_worker

    - name: Install execute worker binary v{{ default_client_version }}
      ansible.builtin.get_url:
        url: "{{ default_download_url_execute }}"
        dest: "{{ default_auxiliary_binary_path }}/polkadot-execute-worker"
        mode: "u+r+x"
        owner: "{{ default_user }}"
        group: "{{ default_user }}"
      register: download_result_execute_worker

- name: Install Polkadot v{{ default_client_version }}
  ansible.builtin.get_url:
    url: "{{ default_download_url }}"
    dest: "{{ default_base_path }}/polkadot-v{{ default_client_version }}"
    mode: "u+r+x"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
  register: download_result
  notify:
    - Add Service Pinned Status
    - Add Polkadot service version
    - Symlink Polkadot service to systemd
    - Symlink Polkadot release
    - Symlink binary executable
    - Stop Polkadot
    - Systemd daemon-reload
    - Start Polkadot
  when:
    - ansible_local['noderole']['node']['pinned'] != "True"
    - ansible_local['noderole']['node']['version'] != default_client_version

- name: Flush handlers after Polkadot install
  ansible.builtin.meta: flush_handlers
  when: download_result.changed

- name: Verify Polkadot version
  ansible.builtin.command: "{{ default_base_path }}/polkadot --version"
  register: default_client_version_result
  changed_when: False
  failed_when: "default_client_version not in default_client_version_result.stdout"

- name: Ensure Polkadot service is running
  ansible.builtin.systemd:
    name: polkadot
    state: started
