---
# Reworked tasks for Prometheus setup

- name: Fetch the latest version of Prometheus
  ansible.builtin.get_url:
    url: "{{ prometheus_download_url }}"
    dest: "/tmp/prometheus.tar.gz"
  vars:
    prometheus_download_url: "{{ lookup('url', 'https://api.github.com/repos/prometheus/prometheus/releases/latest', wantlist=True) | json_query('[0].assets[?content_type==`application/gzip`].browser_download_url') | first }}"
  register: download_result
  until: download_result is succeeded
  retries: 3
  delay: 5

- name: Extract Prometheus package
  ansible.builtin.unarchive:
    src: "/tmp/prometheus.tar.gz"
    dest: "/tmp"
    remote_src: yes
    creates: "/usr/local/bin/prometheus"
  
- name: Move Prometheus binaries to the desired location
  ansible.builtin.command:
    cmd: "mv /tmp/prometheus-{{ prometheus_version }}/prometheus* /usr/local/bin/"
    creates: "/usr/local/bin/prometheus"
  vars:
    prometheus_version: "{{ lookup('url', 'https://api.github.com/repos/prometheus/prometheus/releases/latest', wantlist=True) | json_query('[0].tag_name') }}"

- name: Ensure Prometheus directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: "0755"
  loop:
    - /etc/prometheus/
    - /var/lib/prometheus/
    - /usr/local/bin/

- name: Remove downloaded Prometheus package
  ansible.builtin.file:
    path: "/tmp/prometheus.tar.gz"
    state: absent

- name: Deploy Prometheus configuration
  ansible.builtin.copy:
    src: files/prometheus.yml
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: "0644"

- name: Validate Prometheus configuration
  ansible.builtin.command:
    cmd: "promtool check config /etc/prometheus/prometheus.yml"
    creates: "/etc/prometheus/prometheus.yml.valid"

- name: Manage Prometheus service
  block:
    - name: Check if Prometheus service is already set up
      ansible.builtin.stat:
        path: /etc/systemd/system/prometheus.service
      register: servicestatus

    - name: Set up Prometheus service
      ansible.builtin.template:
        src: files/prometheus.service
        dest: /etc/systemd/system/prometheus.service
        mode: "0644"
      when: not servicestatus.stat.exists

    - name: Handle Prometheus service state
      ansible.builtin.systemd:
        name: prometheus
        daemon_reload: yes
        enabled: yes
        state: "{{ 'started' if not servicestatus.stat.exists else 'restarted' }}"
